# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go


name: Deployment

on: 
  workflow_dispatch:
   inputs:
      VersionNumber:
        description: 'The New Version Number Ex: "1.2.3"'
        required: true
        type: string
        default: "0.0.0"

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.4'

    - name: Build Installer
      run: make
      env:
        POSTMAKEVERSION: ${{ github.event.inputs.VersionNumber }}

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: install.iss
        path: |
             output/install.iss
             output/install/**
             output/postmake.exe
             lua/**/*.lua
             LICENSE.txt

    - name: Create a release
      id: create_release
      run: gh release create "Release-${{ github.event.inputs.VersionNumber }}" ./output/upload/* ./output/githubactionupload/* ./output/install.sh --title "$tag" --notes "$(cat changelog.md)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload github repo
      uses: actions/upload-artifact@v4
      with:
        name: actionrepo
        path: ./output/install/githubaction/ 
        include-hidden-files: true

  build-inno:
    needs: [ build ]
    runs-on: windows-latest
    steps:

     - uses: actions/download-artifact@v4
       with:
        merge-multiple: true

     - name: copy install.iss to root
       run:  copy /B /Y ./output/install.iss ./install.iss
      
     - name: Compile .ISS to .EXE Installer
       uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
       with:
          path: ./output/install.iss

     - name: Upload release assets
       run: gh release upload "Release-${{ github.event.inputs.VersionNumber}}" ./output/postmakeSetup.exe
       env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-action-repo:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          repository: 'LostbBlizzard/postmake-action'
          ref: 'master'
          token:  ${{ secrets.ACTION_REPO_TOKEN }}

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Download generated template
        uses: actions/download-artifact@v4
        with:
          name: actionrepo

      - name: Commit and push generated template
        run: |
          export COMMIT_MESSAGE="Generated from ${{ github.repository }}/${{ github.ref}}@${{ github.sha }}"
          git add .
          git add .github/workflows/CI.yml
          git commit -m "$COMMIT_MESSAGE"
          git push

